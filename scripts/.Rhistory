summaries %>% filter(PlotID %in% baseplots)
summaries <- summaries %>% filter(PlotID %in% baseplots)
rm(f, pr)
summary_cols_not_applicable <- summaries %>% # find columns, where fractional cover
select(where(~ is.numeric(.x) && sum(.x, na.rm = T) == 0)) %>% # in all rows
colnames() # is equal to 0, these are func. grps. not present in the area of analysis
NA_per_col <- summaries %>% # we can identify columns which have MANY NA values in them
st_drop_geometry() %>% # perhaps if > 10% of your values per variables are NA
summarise(across(.cols = everything(),  ~ (sum(is.na(.))))/nrow(.) * 100) %>%
select(where(~ .x >= 10)) # you want to take a look at them - Ours are not too bad.
Variation <- summaries %>% # IDENTIFY COLUMNS with little to no variation in the
st_drop_geometry() %>% # measured variables, if we see var == 0, all measurements
select(where(~ is.numeric(.x))) %>%  # were the same but not caught by 'summary cols not applicable'
summarise(across(.cols = everything(), ~ # we do not have this problem which may
var(scales::rescale(., to = c(0,1), na.rm = T), na.rm = T))) %>%
t() %>% # arise if we always have the same response of an encoded categorical variable
data.frame() %>% # we can still see which of the variables have littler variance
rownames_to_column('Variable') %>% rename(Variance = '.') %>% # here
filter(!Variable %in% c('OBJECTID', 'Latitude_NAD83', 'Longitude_NAD83', 'YearEstablished'))
# hist(Variation$Variance) # the values far left are seldom recorded, e.g. we got rid of vagrant lichen years ago!
summaries1 <- summaries %>%
st_drop_geometry() %>%
filter(is.na(SoilStability_All)) %>%
mutate(across(starts_with('SoilStability'), ~ 999))
summaries <- summaries %>%
filter(!PlotID %in% summaries1$PlotID) %>%
bind_rows(., summaries1)
#summaries1 <- summaries %>%
#  st_drop_geometry() %>%
#  filter(is.na(SoilStability_All)) %>%
#  mutate(across(starts_with('SoilStability'), ~ 999))
summaries <- summaries %>%
filter(!PlotID %in% summaries1$PlotID) %>%
bind_rows(., summaries1)
summaries <- summaries %>%
select(-any_of(summary_cols_not_applicable)) %>%
mutate(DateEstablished = as.Date(DateEstablished), # convert to date format
YearEstablished = as.numeric(format(DateEstablished,'%Y'), .)
)
hist(Variation$Variance) # the values far left are seldom recorded, e.g. we got rid of vagrant lichen years ago!
View(Variation)
rm(summary_cols_not_applicable, NA_per_col, Variation, summary_cols_not_applicable, summaries1)
rm(r)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(spsurvey)
library(sf)
pr <- '../data/raw'
f <- list.files(pr, recursive = T)
UFO_borders <- st_read(file.path(pr, f[grep('*admu.*shp$', f)]), quiet = T) %>%
filter(str_detect(ADMU_NAME, 'UNCOMPAHGRE')) %>%
st_transform(4269) %>%
select(geometry)
summaries <- read.csv(file.path(pr, f[grep('*Hub*', f)])) %>%
filter(State == 'CO') %>%  # reduce to your state of interest
select(-X, -Y, -State:-EcolSiteName, -DateVisited, -Purpose:-DBKey, -PrimaryKey,
-starts_with("RH_"), -starts_with('Sagebrush'), -starts_with('Spp_')) %>%
st_as_sf(coords = c(x = 'Longitude_NAD83', y = 'Latitude_NAD83'), crs = 4269, remove = F) %>%  # now make spatial
st_intersection(UFO_borders, .) %>%
select_if(~sum(!is.na(.)) > 0)
rm(UFO_borders)
baseplots <- st_read(file.path(pr, f[grep('*Design.*shp$', f)]), quiet = T) %>%
filter(!str_detect(PANEL, 'Over')) %>%
pull(PLOTID)
summaries <- summaries %>% filter(PlotID %in% baseplots)
rm(f, pr)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(spsurvey)
library(sf)
pr <- '../data/raw'
f <- list.files(pr, recursive = T)
UFO_borders <- st_read(file.path(pr, f[grep('*admu.*shp$', f)]), quiet = T) %>%
filter(str_detect(ADMU_NAME, 'UNCOMPAHGRE')) %>%
st_transform(4269) %>%
select(geometry)
summaries <- read.csv(file.path(pr, f[grep('*Hub*', f)])) %>%
filter(State == 'CO') %>%  # reduce to your state of interest
select(-X, -Y, -State:-EcolSiteName, -DateVisited, -Purpose:-DBKey, -PrimaryKey,
-starts_with("RH_"), -starts_with('Sagebrush'), -starts_with('Spp_')) %>%
st_as_sf(coords = c(x = 'Longitude_NAD83', y = 'Latitude_NAD83'), crs = 4269, remove = F) %>%  # now make spatial
st_intersection(UFO_borders, .) %>%
select_if(~sum(!is.na(.)) > 0)
rm(UFO_borders)
baseplots <- st_read(file.path(pr, f[grep('*Design.*shp$', f)]), quiet = T) %>%
filter(!str_detect(PANEL, 'Over')) %>%
pull(PLOTID)
summaries <- summaries %>%
mutate(PlotID = str_replace(PlotID, 'Other', 'OT'),
PlotID = str_replace(PlotID, 'Rip', 'RI'))
filter(PlotID %in% baseplots)
summaries <- summaries %>%
mutate(PlotID = str_replace(PlotID, 'Other', 'OT'),
PlotID = str_replace(PlotID, 'Rip', 'RI')) %>%
filter(PlotID %in% baseplots)
View(summaries)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(spsurvey)
library(sf)
pr <- '../data/raw'
f <- list.files(pr, recursive = T)
UFO_borders <- st_read(file.path(pr, f[grep('*admu.*shp$', f)]), quiet = T) %>%
filter(str_detect(ADMU_NAME, 'UNCOMPAHGRE')) %>%
st_transform(4269) %>%
select(geometry)
summaries <- read.csv(file.path(pr, f[grep('*Hub*', f)])) %>%
filter(State == 'CO') %>%  # reduce to your state of interest
select(-X, -Y, -State:-EcolSiteName, -DateVisited, -Purpose:-DBKey, -PrimaryKey,
-starts_with("RH_"), -starts_with('Sagebrush'), -starts_with('Spp_')) %>%
st_as_sf(coords = c(x = 'Longitude_NAD83', y = 'Latitude_NAD83'), crs = 4269, remove = F) %>%  # now make spatial
st_intersection(UFO_borders, .) %>%
select_if(~sum(!is.na(.)) > 0)
rm(UFO_borders)
baseplots <- st_read(file.path(pr, f[grep('*Design.*shp$', f)]), quiet = T) %>%
filter(!str_detect(PANEL, 'Over')) %>%
pull(PLOTID)
summaries1 <- summaries %>%
mutate(PlotID = str_replace(PlotID, 'Other', 'OT'),
PlotID = str_replace(PlotID, 'Rip', 'RI')) %>%
View(summaries)
summaries1 <- summaries %>%
mutate(PlotID = str_replace(PlotID, 'Other', 'OT'),
PlotID = str_replace(PlotID, 'Rip', 'RI')) #%>%
View(summaries1)
summaries1 <- summaries %>%
mutate(PlotID = str_replace(PlotID, 'Other', 'OT'),
PlotID = str_replace(PlotID, 'Rip', 'RI')) %>%
filter(PlotID %in% baseplots)
summaries <- summaries %>%
mutate(PlotID = str_replace(PlotID, 'Other', 'OT'),
PlotID = str_replace(PlotID, 'Rip', 'RI')) %>%
filter(PlotID %in% baseplots)
rm(f, pr)
rm(summaries1)
summary_cols_not_applicable <- summaries %>% # find columns, where fractional cover
select(where(~ is.numeric(.x) && sum(.x, na.rm = T) == 0)) %>% # in all rows
colnames() # is equal to 0, these are func. grps. not present in the area of analysis
NA_per_col <- summaries %>% # we can identify columns which have MANY NA values in them
st_drop_geometry() %>% # perhaps if > 10% of your values per variables are NA
summarise(across(.cols = everything(),  ~ (sum(is.na(.))))/nrow(.) * 100) %>%
select(where(~ .x >= 10)) # you want to take a look at them - Ours are not too bad.
Variation <- summaries %>% # IDENTIFY COLUMNS with little to no variation in the
st_drop_geometry() %>% # measured variables, if we see var == 0, all measurements
select(where(~ is.numeric(.x))) %>%  # were the same but not caught by 'summary cols not applicable'
summarise(across(.cols = everything(), ~ # we do not have this problem which may
var(scales::rescale(., to = c(0,1), na.rm = T), na.rm = T))) %>%
t() %>% # arise if we always have the same response of an encoded categorical variable
data.frame() %>% # we can still see which of the variables have littler variance
rownames_to_column('Variable') %>% rename(Variance = '.') %>% # here
filter(!Variable %in% c('OBJECTID', 'Latitude_NAD83', 'Longitude_NAD83', 'YearEstablished'))
hist(Variation$Variance) # the values far left are seldom recorded, e.g. we got rid of vagrant lichen years ago!
#summaries1 <- summaries %>%
#  st_drop_geometry() %>%
#  filter(is.na(SoilStability_All)) %>%
#  mutate(across(starts_with('SoilStability'), ~ 999))
#summaries <- summaries %>%
#  filter(!PlotID %in% summaries1$PlotID) %>%
#  bind_rows(., summaries1)
summaries <- summaries %>%
select(-any_of(summary_cols_not_applicable)) %>%
mutate(DateEstablished = as.Date(DateEstablished), # convert to date format
YearEstablished = as.numeric(format(DateEstablished,'%Y'), .)
)
rm(summary_cols_not_applicable, NA_per_col, Variation, summary_cols_not_applicable, summaries1)
rm(f, pr, baseplots)
View(summaries)
summaries1 <- summaries %>%
st_drop_geometry() %>%
filter(is.na(SoilStability_All)) %>%
mutate(across(starts_with('SoilStability'), ~ 999))
View(summaries1)
summaries <- summaries %>%
filter(!PlotID %in% summaries1$PlotID) %>%
bind_rows(., summaries1)
rm(summary_cols_not_applicable, NA_per_col, Variation, summary_cols_not_applicable, summaries1)
View(summaries)
View(summaries)
separate(PlotID)
summaries %>%
separate(PlotID, sep = '-', remove = F)
summaries %>%
separate(PlotID, into = 'Stratum', sep = '-', remove = F)
sum <- summaries %>%
separate(PlotID, into = 'Stratum', sep = '-', remove = F)
sum <- summaries %>%
separate(PlotID, into = 'Stratum', sep = '-', remove = F, extra = 'drop')
summary(sum, formula = . ~ Stratum)
View(sum)
sum <- summaries %>%
separate(PlotID, into = 'Stratum', sep = '-', remove = F, extra = 'drop') %>%
mutate(Stratum = factor(Stratum))
summary(sum, formula = . ~ Stratum)
r1 <_ summary(sum, formula = . ~ Stratum)
r1 <- summary(sum, formula = . ~ Stratum)
r1
summary(sum, formula = BareSoilCover ~ Stratum)
plot(sum, formula = BareSoilCover ~ Stratum)
spsurvey::plot(sum, formula = BareSoilCover ~ Stratum)
spsurvey::summary(sum, formula = BareSoilCover ~ Stratum)
summary(sum, formula = BareSoilCover ~ Stratum)
sum1 <- summaries %>%
separate(PlotID, into = 'Stratum', sep = '-', remove = F, extra = 'drop') %>%
mutate(Stratum = factor(Stratum))
summary(sum1, formula = BareSoilCover ~ Stratum)
sp_summarize(sum1, formula = BareSoilCover ~ Stratum)
sp_summarize(sum1, formula = BareSoilCover ~ Stratum)
library(spsurvey)
sp_summarize(sum1, formula = BareSoilCover ~ Stratum)
cont_analysis(sum1, formula = BareSoilCover ~ Stratum)
cont_analysis(dframe = sum1, subpops = Stratum)
cont_analysis(dframe = sum1, subpops = Stratum, vars = .)
cont_analysis(dframe = sum1, subpops = Stratum, vars = BareSoilCover)
View(sum1)
cont_analysis(dframe = sum1, subpops = Stratum, vars = 'BareSoilCover')
cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover')
unqie(sum1$Stratum)
uniue(sum1$Stratum)
unique(sum1$Stratum)
install.packages('Wakefield')
install.packages('wakefield')
length(unique(sum1$Stratum))
wakefield::probs(length(unique(sum1$Stratum)))
sum ( wakefield::probs(length(unique(sum1$Stratum))) )
wakefield::probs(length(unique(sum1$Stratum)))
data.frame(weights = wakefield::probs(length(unique(sum1$Stratum))),
Stratum = unique(sum1$Stratum))
v <- data.frame(weights = wakefield::probs(length(unique(sum1$Stratum))),
Stratum = unique(sum1$Stratum))
left_join(sum1, v)
sum1 <- left_join(sum1, v, by = 'Stratum')
cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover')
errorprnt()
View(sum1)
v <- data.frame(weight = wakefield::probs(length(unique(sum1$Stratum))),
Stratum = unique(sum1$Stratum))
sum1 <- left_join(sum1, v, by = 'Stratum')
cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover')
View(sum1)
errorprnt()
View(sum1)
sum1 <- summaries %>%
separate(PlotID, into = 'Stratum', sep = '-', remove = F, extra = 'drop') %>%
mutate(Stratum = factor(Stratum)) %>%
st_transform(26921)
sum1 <- summaries %>%
separate(PlotID, into = 'Stratum', sep = '-', remove = F, extra = 'drop') %>%
mutate(Stratum = factor(Stratum)) %>%
st_transform(26912)
errorprnt()
sum1 <- summaries %>%
separate(PlotID, into = 'Stratum', sep = '-', remove = F, extra = 'drop') %>%
mutate(Stratum = factor(Stratum)) %>%
st_transform(26912) %>%
mutate(xcoord = unlist(map(.$geometry,1)),
ycoord = unlist(map(.$geometry,2)))
v <- data.frame(weight = wakefield::probs(length(unique(sum1$Stratum))),
Stratum = unique(sum1$Stratum))
sum1 <- left_join(sum1, v, by = 'Stratum')
cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover')
errorprnt()
cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover', xcoord = 'xcoord', ycoord = 'ycoord')
errorprnt()
sum1 <- summaries %>%
separate(PlotID, into = 'Stratum', sep = '-', remove = F, extra = 'drop') %>%
mutate(Stratum = factor(Stratum)) %>%
st_transform(26912) %>%
mutate(xcoord = unlist(map(.$geometry,1)),
ycoord = unlist(map(.$geometry,2))) %>%
filter(PlotID != 'GR-021')
v <- data.frame(weight = wakefield::probs(length(unique(sum1$Stratum))),
Stratum = unique(sum1$Stratum))
sum1 <- left_join(sum1, v, by = 'Stratum')
cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover',
xcoord = 'xcoord', ycoord = 'ycoord')
warnprnt
warn_df
View(warn_df)
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover',
xcoord = 'xcoord', ycoord = 'ycoord')
View(v)
plot(v$CDF)
View(v)
plot(v$Pct)
v$Pct
View(v)
v$Mean
View(sum1)
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80)
v$Pct
v$Mean
View(v)
v$Total
View(v)
v$Pct
v$Mean
v$Total
View(v)
v$Mean
v$Total
v$Total['Estimate']
v$Mean['Estimate']
v$Mean['Estimate'] = v$Total['Estimate']
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80)
v$Mean['Estimate'] == v$Total['Estimate']
v$Mean['Estimate']
v$Total['Estimate']
v$Mean['Estimate']
v$Total['Estimate']
v$Mean
v$Total
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = .,
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80)
v$CDF
v$Pct
print(v$Mean)
meanv <- v$Mean
View(meanv)
pctv <- v$Pct
View(pctv)
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(10,20,30,40,50,60,70,80,90))
pctv <- v$Pct
meanv <- v$Mean
v$Total
pctv <- v$Pct
View(pctv)
meanv <- v$Mean
View(meanv)
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(10,30,50,70,80,90,100))
pctv <- v$Pct
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(10,30,50,70,80,90))
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(10,30,50,70,80,90))
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(10,30,50,70,80,9
pctv <- v$Pct
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(10,30,50,70,80))
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(10,30,50,70,80))
pctv <- v$Pct
pctv <- v$Pct
View(pctv)
View(v)
v$Total
v$Total
meanv <- v$Mean
meanv
View(pctv)
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover', statistics = 'mean',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(10,30,50,70,80))
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover', statistics = 'Mean',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(10,30,50,70,80))
warn_df
View(v)
View(v)
meanv <- v[['Mean']]
View(meanv)
pctv <- v[['Pct']]
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover', #statistics = 'Mean',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(10,30,50,70,80))
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover', #statistics = 'Mean',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(10,30,50,70,80))
pctv <- v[['Pct']]
View(pctv)
View(meanv)
View(v)
v[["Total"]]
v[["Pct"]]
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover', #statistics = 'Mean',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))
pctv <- v[['Pct']] # XX Percent of the land has
meanv <- v[['Mean']] # easy peasy is the mean, and how certain we are that our calculation of it is true
View(pctv)
View(meanv)
View(sum1)
v1 <- c('GapCover_25_50)
v1 <- c('GapCover_25_50')
v1 <- c('GapCover_25_50', 'GapCover_50_100')
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = v1, #statistics = 'Mean',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))
error_vec
v1 <- c('GapCover_25_50', 'GapCover_51_100')
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = v1, #statistics = 'Mean',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))
View(v)
View(v)
View(v)
pctv <- v[['Pct']] # XX Percent of the land has
meanv <- v[['Mean']] # easy peasy is the mean, and how certain we are that our calculation of it is true
View(pctv)
View(v)
v[["Pct"]]
sum1 %>%
select(where(is.numeric()))
sum1 %>%
select(where(is.numeric))
sum1 %>%
select(where(is.numeric), BareSoilCover:Hgt_Sagebrush_Live_Avg)
sum1 %>%
select(where(is.numeric)) %>%
select(BareSoilCover:Hgt_Sagebrush_Live_Avg)
sum1 %>%
select(where(is.numeric)) %>%
select(BareSoilCover:Hgt_Sagebrush_Live_Avg) %>%
colnames()
sum1 %>%
select(where(is.numeric)) %>%
select(BareSoilCover:Hgt_Sagebrush_Live_Avg) %>%
st_drop_geometry() %>%
colnames()
cols2calc <- sum1 %>%
select(where(is.numeric)) %>%
select(BareSoilCover:Hgt_Sagebrush_Live_Avg) %>%
st_drop_geometry() %>%
colnames()
v2 <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = v1, statistics = 'Mean',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80)
View(warn_df)
View(v2)
v2[["Mean"]]
strt <- Sys.time()
v2 <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = cols2calc, statistics = 'Mean',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80)
Sys.time() - strt
View(v2)
v2[["Mean"]]
strt <- Sys.time()
v2 <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = cols2calc, statistics = 'Mean',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80)
Sys.time() - strt
View(v2)
strt <- Sys.time()
v2 <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = cols2calc, statistics = 'Mean',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80)
v2 <- v2['Mean'] %>% bind_rows()
Sys.time() - strt
View(v2)
strt <- Sys.time()
v3 <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = cols2calc, statistics = 'Pct',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))
v3 <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = cols2calc[1:50], statistics = 'Pct',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))
v3 <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = cols2calc[1:40], statistics = 'Pct',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))
v3 <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = cols2calc[1:30], statistics = 'Pct',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))
v3 <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = cols2calc[1:10], statistics = 'Pct',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))
v3 <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = cols2calc[1:5], statistics = 'Pct',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))
v3 <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = cols2calc[1:5], statistics = 'Pct',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))
v3 <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = cols2calc[1], statistics = 'Pct',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))
v3 <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = cols2calc[2], statistics = 'Pct',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))
v3 <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = cols2calc[3], statistics = 'Pct',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))
v3 <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = cols2calc[3], statistics = 'Pct',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))4v3 <- v3['Mean'] %>% bind_rows()
v3 <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = cols2calc[4], statistics = 'Pct',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))v3 <- v3['Mean'] %>% bind_rows()
v3 <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = cols2calc[4], statistics = 'Pct',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))
v3 <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = cols2calc[5], statistics = 'Pct',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))
v3 <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = cols2calc[6], statistics = 'Pct',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))
cols2calc[6]
sum1['GapCover_200_plus']
d <- sum1['GapCover_200_plus']
View(d)
v3 <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = cols2calc[6], statistics = 'Pct',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))
v3 <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = cols2calc[1:5], statistics = 'Pct',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))
v3 <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = cols2calc[7:25], statistics = 'Pct',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))
View(v3)
View(v2)
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = v1, #statistics = 'Mean',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))
View(v)
v[["Pct"]]
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover', #statistics = 'Mean',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(50,70,80))
pctv <- v[['Pct']] # XX Percent of the land has
meanv <- v[['Mean']] # easy peasy is the mean, and how certain we are that our calculation of it is true
View(pctv)
View(meanv)
pctv <- v[['Pct']] # XX Percent of the land which is achieving a standard.
View(pctv)
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover', #statistics = 'Mean',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(70))
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover', #statistics = 'Mean',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = 70)
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover', #statistics = 'Mean',
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(70, 80))
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover', statistics = c('Mean', 'Pct'),
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(70, 80))
pctv <- v[['Pct']] # XX Percent of the land which is achieving a standard.
View(pctv)
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover', statistics = c('Mean', 'Pct'),
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = 70)
v <- cont_analysis(dframe = sum1, subpops = 'Stratum', vars = 'BareSoilCover', statistics = c('Mean', 'Pct'),
xcoord = 'xcoord', ycoord = 'ycoord', conf = 80, pctval = c(70, 80))
